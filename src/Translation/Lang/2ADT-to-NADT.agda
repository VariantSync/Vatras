{-# OPTIONS --sized-types #-}

open import Framework.V2.Definitions
module Framework.V2.Translation.Lang.2ADT-to-NADT {F : ùîΩ} {A : ùî∏} where

open import Data.Nat using (‚Ñï)
open import Level using (0‚Ñì)
open import Size using (‚àû; ‚Üë_)

open import Relation.Binary.PropositionalEquality as Eq using (_‚â°_; refl)
open Eq.‚â°-Reasoning

import Data.IndexedSet

import Framework.V2.Constructs.Choices
open Framework.V2.Constructs.Choices.Choice‚Çô renaming (map to map‚Çô)

open import Framework.V2.Variant using (VariantSetoid)
open import Framework.V2.Variants using (GrulerVariant)
open import Framework.V2.Lang.2ADT
open import Framework.V2.Lang.NADT

import Framework.V2.Translation.Construct.2Choice-to-NChoice {F} as 2‚ÜíN
open 2‚ÜíN.Translate using (convert)

compile : ‚àÄ {i} ‚Üí 2ADT F i A ‚Üí NADT F i A
compile (value a)      = NADTAsset a
compile (choice {i} c) = NADTChoice (map‚Çô compile (convert (Eq.setoid (2ADT F i A)) c))

module Preservation where
  -- open Data.IndexedSet (VariantSetoid GrulerVariant A) using () renaming (_‚âÖ_ to _‚âã_)

  -- TODO: Prove Preservation of compile
  -- open 2‚ÜíN.Translate.Preservation 2ADTVL NADTVL compile conf' fnoc' using (preserves-conf; preserves-fnoc)

  -- preserves-l : ‚àÄ (e : 2ADT A) ‚Üí Conf-Preserves 2ADTVL NADTVL e (compile e) conf'
  -- preserves-l (value _) _ = refl
  -- preserves-l (choice (D ‚ü® l , r ‚ü©)) c =
  --   begin
  --     ‚ü¶ choice (D ‚ü® l , r ‚ü©) ‚üß-2adt c
  --   ‚â°‚ü®‚ü©
  --     BinaryChoice-Semantics 2ADTVL (D ‚ü® l , r ‚ü©) c
  --   ‚â°‚ü® preserves-conf D l r (default-conf-satisfies-spec D) (preserves-l l) (preserves-l r) c ‚ü©
  --     Choice-Semantics NADTVL (convert (D ‚ü® l , r ‚ü©)) (conf' c)
  --   ‚â°‚ü®‚ü©
  --     ‚ü¶ compile (choice (D ‚ü® l , r ‚ü©)) ‚üß-nadt (conf' c)
  --   ‚àé

  -- preserves-r : ‚àÄ (e : 2ADT A) ‚Üí Fnoc-Preserves 2ADTVL NADTVL e (compile e) fnoc'
  -- preserves-r (value _) _ = refl
  -- preserves-r (choice (D ‚ü® l , r ‚ü©)) c = preserves-fnoc D l r (default-fnoc-satisfies-spec D) (preserves-r l) (preserves-r r) c

  -- preserves : ‚àÄ (e : 2ADT A) ‚Üí ‚ü¶ e ‚üß-2adt ‚âã ‚ü¶ compile e ‚üß-nadt
  -- preserves e = ‚äÜ-by-index-translation conf' (preserves-l e)
  --           and ‚äÜ-by-index-translation fnoc' (preserves-r e)
