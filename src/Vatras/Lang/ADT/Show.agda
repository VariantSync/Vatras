open import Vatras.Framework.Definitions using (ùîΩ; ùïç; ùî∏)
module Vatras.Lang.ADT.Show {F : ùîΩ} {V : ùïç} where

open import Data.String as String using (String; _++_)

open import Vatras.Show.Lines
open import Vatras.Lang.ADT F V using (ADT; leaf; _‚ü®_,_‚ü©)

{-|
Pretty printer for ADTs.
-}
pretty : {A : ùî∏} ‚Üí (V A ‚Üí String) ‚Üí (F ‚Üí String) ‚Üí ADT A ‚Üí Lines
pretty pretty-variant show-F (leaf v) = > pretty-variant v
pretty pretty-variant show-F (D ‚ü® l , r ‚ü©) = do
  > show-F D ++ "‚ü®"
  indent 2 do
    appendToLastLine "," (pretty pretty-variant show-F l)
    pretty pretty-variant show-F r
  > "‚ü©"
