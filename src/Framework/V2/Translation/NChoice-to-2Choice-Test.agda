{-# OPTIONS --allow-unsolved-metas #-}

open import Framework.V2.Definitions
module Framework.V2.Translation.NChoice-to-2Choice-Test (F : ùîΩ) where

open import Data.Nat using (‚Ñï)
open import Data.List using (List; _‚à∑_; []; map)
open import Data.List.NonEmpty using (List‚Å∫; _‚à∑_)
open import Framework.V2.Compiler using (ConstructCompiler)
open import Framework.V2.Constructs.Choices as Chc
open Chc.Choice‚ÇÇ using (_‚ü®_,_‚ü©) renaming (Syntax to 2Choice; Standard-Semantics to ‚ü¶_‚üß‚ÇÇ; Config to Config‚ÇÇ)
open Chc.Choice‚Çô using (_‚ü®_‚ü©) renaming (Syntax to NChoice; Standard-Semantics to ‚ü¶_‚üß‚Çô; Config to Config‚Çô)
open Chc.VLChoice‚ÇÇ using () renaming (Construct to C‚ÇÇ)
open Chc.VLChoice‚Çô using () renaming (Construct to C‚Çô)
open import Framework.V2.Translation.NChoice-to-2Choice {Q = F} as BLUB
open BLUB.Translate ‚Ñï

example : ‚àÄ {D : F} ‚Üí D ‚ü® 1 , 2 ‚à∑ [] ‚ü©‚áù (D ‚àô 0) ‚ü® val 1 , chc ((D ‚àô 1) ‚ü® val 2 , val 2 ‚ü©) ‚ü©
example = step base

example' : ‚àÄ {D : F}
  ‚Üí D ‚ü® 1 , 2 ‚à∑ 3 ‚à∑ [] ‚ü©‚áù (D ‚àô 0) ‚ü® val 1 , chc ((D ‚àô 1) ‚ü® val 2 , chc ((D ‚àô 2) ‚ü® val 3 , val 3 ‚ü©) ‚ü©) ‚ü©
example' = step (step base)
