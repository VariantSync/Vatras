open import Framework.V2.Definitions
module Framework.V2.Translation.2ADTtoNADT {A : ùî∏} where

open import Data.Nat using (‚Ñï)
open import Level using (0‚Ñì)
open import Relation.Binary.PropositionalEquality as Eq using (_‚â°_; refl)
open Eq.‚â°-Reasoning

import Data.IndexedSet

import Framework.V2.Constructs.Choices
open Framework.V2.Constructs.Choices.Choice‚Çô renaming (map to map‚Çô)

open import Framework.V2.Variants using (VariantSetoid; GrulerVariant)
open import Framework.V2.Lang.2ADT
open import Framework.V2.Lang.NADT

open import Framework.V2.Translation.2Choice-to-NChoice {0‚Ñì} {‚Ñï} as 2‚ÜíN using (default-conf; default-fnoc; default-conf-satisfies-spec; default-fnoc-satisfies-spec)
open 2‚ÜíN.Translate (Eq.setoid (2ADT A)) using (convert)

{-# TERMINATING #-}
compile : 2ADT A ‚Üí NADT A
compile (2ADTAsset  a) = NADTAsset a
compile (2ADTChoice c) = NADTChoice (map‚Çô compile (convert c))

module Preservation where
  open Data.IndexedSet (VariantSetoid GrulerVariant A) using () renaming (_‚âÖ_ to _‚âã_)
  -- open 2‚ÜíN.Translate.Preservation 2ADTVL NADTVL compile conf' fnoc' using (preserves-conf; preserves-fnoc)

  -- preserves-l : ‚àÄ (e : 2ADT A) ‚Üí Conf-Preserves 2ADTVL NADTVL e (compile e) conf'
  -- preserves-l (2ADTAsset _) _ = refl
  -- preserves-l (2ADTChoice (D ‚ü® l , r ‚ü©)) c =
  --   begin
  --     ‚ü¶ 2ADTChoice (D ‚ü® l , r ‚ü©) ‚üß-2adt c
  --   ‚â°‚ü®‚ü©
  --     BinaryChoice-Semantics 2ADTVL (D ‚ü® l , r ‚ü©) c
  --   ‚â°‚ü® preserves-conf D l r (default-conf-satisfies-spec D) (preserves-l l) (preserves-l r) c ‚ü©
  --     Choice-Semantics NADTVL (convert (D ‚ü® l , r ‚ü©)) (conf' c)
  --   ‚â°‚ü®‚ü©
  --     ‚ü¶ compile (2ADTChoice (D ‚ü® l , r ‚ü©)) ‚üß-nadt (conf' c)
  --   ‚àé

  -- preserves-r : ‚àÄ (e : 2ADT A) ‚Üí Fnoc-Preserves 2ADTVL NADTVL e (compile e) fnoc'
  -- preserves-r (2ADTAsset _) _ = refl
  -- preserves-r (2ADTChoice (D ‚ü® l , r ‚ü©)) c = preserves-fnoc D l r (default-fnoc-satisfies-spec D) (preserves-r l) (preserves-r r) c

  -- preserves : ‚àÄ (e : 2ADT A) ‚Üí ‚ü¶ e ‚üß-2adt ‚âã ‚ü¶ compile e ‚üß-nadt
  -- preserves e = ‚äÜ-by-index-translation conf' (preserves-l e)
  --           and ‚äÜ-by-index-translation fnoc' (preserves-r e)
