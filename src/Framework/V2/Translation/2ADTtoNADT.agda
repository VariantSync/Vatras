module Framework.V2.Translation.2ADTtoNADT where

open import Data.Nat using (‚Ñï)

open import Framework.V2.Definitions

open import Framework.V2.Lang.2ADT
open import Framework.V2.Lang.NADT

module 2ADTVL‚ÜíNADTVL {A : ùî∏} where
  {-# TERMINATING #-}
  compile : 2ADT A ‚Üí NADT A

  open 2‚ÜíN-Choice {‚Ñï} using (default-conf; default-fnoc; default-conf-satisfies-spec; default-fnoc-satisfies-spec)
  open 2‚ÜíN-Choice.Translate {‚Ñï} 2ADTVL NADTVL compile using (convert)
  conf' = default-conf
  fnoc' = default-fnoc

  compile (2ADTAsset  a) = NADTAsset a
  compile (2ADTChoice c) = NADTChoice (convert c)

  module Preservation where
    open Eq.‚â°-Reasoning
    open Data.IndexedSet (VariantSetoid GrulerVariant A) using (‚äÜ-by-index-translation) renaming (_‚âÖ_ to _‚âã_)
    open 2‚ÜíN-Choice.Translate.Preservation {‚Ñï} 2ADTVL NADTVL compile conf' fnoc' using (preserves-conf; preserves-fnoc)

    preserves-l : ‚àÄ (e : 2ADT A) ‚Üí Conf-Preserves 2ADTVL NADTVL e (compile e) conf'
    preserves-l (2ADTAsset _) _ = refl
    preserves-l (2ADTChoice (D ‚ü® l , r ‚ü©)) c =
      begin
        ‚ü¶ 2ADTChoice (D ‚ü® l , r ‚ü©) ‚üß-2adt c
      ‚â°‚ü®‚ü©
        BinaryChoice-Semantics 2ADTVL (D ‚ü® l , r ‚ü©) c
      ‚â°‚ü® preserves-conf D l r (default-conf-satisfies-spec D) (preserves-l l) (preserves-l r) c ‚ü©
        Choice-Semantics NADTVL (convert (D ‚ü® l , r ‚ü©)) (conf' c)
      ‚â°‚ü®‚ü©
        ‚ü¶ compile (2ADTChoice (D ‚ü® l , r ‚ü©)) ‚üß-nadt (conf' c)
      ‚àé

    preserves-r : ‚àÄ (e : 2ADT A) ‚Üí Fnoc-Preserves 2ADTVL NADTVL e (compile e) fnoc'
    preserves-r (2ADTAsset _) _ = refl
    preserves-r (2ADTChoice (D ‚ü® l , r ‚ü©)) c = preserves-fnoc D l r (default-fnoc-satisfies-spec D) (preserves-r l) (preserves-r r) c

    preserves : ‚àÄ (e : 2ADT A) ‚Üí ‚ü¶ e ‚üß-2adt ‚âã ‚ü¶ compile e ‚üß-nadt
    preserves e = ‚äÜ-by-index-translation conf' (preserves-l e)
              and ‚äÜ-by-index-translation fnoc' (preserves-r e)
